#!/usr/bin/perl

=head1 NAME

p0f_wrapper - A wrapper for the p0f process

=cut

=head1 DESCRIPTION

p0f_wrapper

Since the p0f service does not write it's own pidfile.
This script will handle daemonization and pidfile creation.

=cut

use strict;
use warnings;
use lib qw(/usr/local/pf/lib);
use fingerbank::Config;
use pf::log;
use pf::config qw(%Config);
use pf::file_paths qw($var_dir $log_dir);
use pf::services::util qw(daemonize);
my $FingerbankConfig = fingerbank::Config::get_config;
my $p0f_map = $FingerbankConfig->{tcp_fingerprinting}{p0f_map_path};
my $p0f_sock = $FingerbankConfig->{tcp_fingerprinting}{p0f_socket_path};
my $binary = $Config{services}{p0f_binary};

daemonize("p0f");

my $log_file = "$log_dir/p0f.log";

my $logger = get_logger();

my @p0f_args = ("-i", "any", "-p", "-f", $p0f_map, "-s", $p0f_sock, "-o", $log_file);

my $cmd = join(" ", $binary, @p0f_args);

$logger->info("Running the following command $cmd");

exec($cmd) or print "Cannot run $cmd\n";

exit(127);

=head1 AUTHOR

Inverse inc. <info@inverse.ca>

=head1 COPYRIGHT

Copyright (C) 2005-2016 Inverse inc.

=head1 LICENSE

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301,
USA.

=cut

