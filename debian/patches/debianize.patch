--- a/conf/mariadb/mariadb.conf.tt.example
+++ b/conf/mariadb/mariadb.conf.tt.example
@@ -18,7 +18,7 @@
 bind-address=
 [% END %]
 port    = 3306
-socket    = /var/lib/mysql/mysql.sock
+socket    = /var/run/mysqld/mysqld.sock
 skip-external-locking
 key_buffer_size = [% key_buffer_size %]M
 max_allowed_packet = [% max_allowed_packet %]M
--- a/conf/pf.conf.defaults
+++ b/conf/pf.conf.defaults
@@ -349,7 +349,7 @@
 # services.radiusd_binary
 # 
 # Location of the named binary. Only necessary to change if you are not running the RPMed version.
-radiusd_binary=/usr/sbin/radiusd
+radiusd_binary=/usr/sbin/freeradius
 #
 # services.iptables
 #
@@ -414,7 +414,7 @@
 # services.httpd_binary
 #
 # Location of the apache binary. Only necessary to change if you are not running the RPMed version.
-httpd_binary=/usr/sbin/httpd
+httpd_binary=/usr/sbin/apache2
 #
 # services.pfsetvlan
 #
@@ -526,7 +526,7 @@
 # services.statsd_binary
 # 
 # Location of the statsd (node) binary. Only necessary to change if you are not running the pre-packaged version.
-statsd_binary=/usr/bin/node
+statsd_binary=/usr/bin/nodejs
 #
 # services.radsniff
 #
@@ -546,7 +546,7 @@
 # services.p0f_binary
 # 
 # Location of the p0f binary. Only necessary to change if you are not running the pre-packaged version.
-p0f_binary=/usr/local/bin/p0f
+p0f_binary=/usr/sbin/p0f
 #
 # services.openssl_binary
 #
@@ -556,7 +556,7 @@
 # services.arp_binary
 # 
 # location of the arp binary. only necessary to change if you are not running the rpmed version.
-arp_binary=/sbin/arp
+arp_binary=/usr/sbin/arp
 
 #
 # services.routes
--- a/conf/systemd/packetfence-dhcpd.service
+++ b/conf/systemd/packetfence-dhcpd.service
@@ -8,10 +8,10 @@
 [Service]
 StartLimitBurst=3
 StartLimitInterval=60
-Type=notify
+Type=simple
 PIDFile=/usr/local/pf/var/run/dhcpd.pid
 ExecStartPre=/usr/local/pf/bin/pfcmd service dhcpd generateconfig
-ExecStartPre=/bin/perl -I/usr/local/pf/lib '-Mpf::services::manager::dhcpd' -e 'pf::services::manager::dhcpd->new()->preStartSetup()'
+ExecStartPre=/usr/bin/perl -I/usr/local/pf/lib '-Mpf::services::manager::dhcpd' -e 'pf::services::manager::dhcpd->new()->preStartSetup()'
 ExecStart=/usr/sbin/dhcpd -pf /usr/local/pf/var/run/dhcpd.pid -f -lf /usr/local/pf/var/dhcpd/dhcpd.leases -cf /usr/local/pf/var/conf/dhcpd.conf 
 Restart=on-failure
 Slice=packetfence.slice
--- a/conf/systemd/packetfence-httpd.aaa.service
+++ b/conf/systemd/packetfence-httpd.aaa.service
@@ -12,7 +12,7 @@
 Type=simple
 PIDFile=/usr/local/pf/var/run/httpd.aaa.pid
 ExecStartPre=/usr/local/pf/bin/pfcmd service httpd.aaa generateconfig
-ExecStart=/usr/sbin/httpd -f /usr/local/pf/var/conf/httpd.conf.d/httpd.aaa -DFOREGROUND  -Drhel
+ExecStart=/usr/sbin/apache2 -f /usr/local/pf/var/conf/httpd.conf.d/httpd.aaa -DFOREGROUND  -Ddebian
 ExecReload=/bin/kill -USR1 ${MAINPID}
 ExecStop=/bin/kill -WINCH ${MAINPID}
 # We want systemd to give httpd some time to finish gracefully, but still want
--- a/conf/systemd/packetfence-httpd.admin.service
+++ b/conf/systemd/packetfence-httpd.admin.service
@@ -12,7 +12,7 @@
 PIDFile=/usr/local/pf/var/run/httpd.admin.pid
 Environment=X_PORTAL=default
 ExecStartPre=/usr/local/pf/bin/pfcmd service httpd.admin generateconfig
-ExecStart=/usr/sbin/httpd -f /usr/local/pf/var/conf/httpd.conf.d/httpd.admin -DFOREGROUND  -Drhel
+ExecStart=/usr/sbin/apache2 -f /usr/local/pf/var/conf/httpd.conf.d/httpd.admin -DFOREGROUND  -Ddebian
 ExecReload=/bin/kill -USR1 ${MAINPID}
 ExecStop=/bin/kill -WINCH ${MAINPID}
 # We want systemd to give httpd some time to finish gracefully, but still want
--- a/conf/systemd/packetfence-httpd.collector.service
+++ b/conf/systemd/packetfence-httpd.collector.service
@@ -11,7 +11,7 @@
 Type=simple
 PIDFile=/usr/local/pf/var/run/httpd.collector.pid
 ExecStartPre=/usr/local/pf/bin/pfcmd service httpd.collector generateconfig
-ExecStart=/usr/sbin/httpd -f /usr/local/pf/var/conf/httpd.conf.d/httpd.collector -DFOREGROUND  -Drhel
+ExecStart=/usr/sbin/apache2 -f /usr/local/pf/var/conf/httpd.conf.d/httpd.collector -DFOREGROUND  -Ddebian
 ExecReload=/bin/kill -USR1 ${MAINPID}
 ExecStop=/bin/kill -WINCH ${MAINPID}
 # We want systemd to give httpd some time to finish gracefully, but still want
--- a/conf/systemd/packetfence-httpd.graphite.service
+++ b/conf/systemd/packetfence-httpd.graphite.service
@@ -11,7 +11,7 @@
 Type=simple
 PIDFile=/usr/local/pf/var/run/httpd.graphite.pid
 ExecStartPre=/usr/local/pf/bin/pfcmd service httpd.graphite generateconfig
-ExecStart=/usr/sbin/httpd -f /usr/local/pf/var/conf/httpd.conf.d/httpd.graphite -DFOREGROUND  -Drhel
+ExecStart=/usr/sbin/apache2 -f /usr/local/pf/var/conf/httpd.conf.d/httpd.graphite -DFOREGROUND  -Ddebian
 ExecReload=/bin/kill -USR1 ${MAINPID}
 ExecStop=/bin/kill -WINCH ${MAINPID}
 # We want systemd to give httpd some time to finish gracefully, but still want
--- a/conf/systemd/packetfence-httpd.parking.service
+++ b/conf/systemd/packetfence-httpd.parking.service
@@ -10,7 +10,7 @@
 StartLimitInterval=60
 Type=simple
 ExecStartPre=/usr/local/pf/bin/pfcmd service httpd.parking generateconfig
-ExecStart=/usr/sbin/httpd -f /usr/local/pf/var/conf/httpd.conf.d/httpd.parking -DFOREGROUND  -Drhel
+ExecStart=/usr/sbin/apache2 -f /usr/local/pf/var/conf/httpd.conf.d/httpd.parking -DFOREGROUND  -Ddebian
 ExecReload=/bin/kill -USR1 ${MAINPID}
 ExecStop=/bin/kill -WINCH ${MAINPID}
 # We want systemd to give httpd some time to finish gracefully, but still want
--- a/conf/systemd/packetfence-httpd.portal.service
+++ b/conf/systemd/packetfence-httpd.portal.service
@@ -11,7 +11,7 @@
 Type=simple
 PIDFile=/usr/local/pf/var/run/httpd.portal.pid
 ExecStartPre=/usr/local/pf/bin/pfcmd service httpd.portal generateconfig
-ExecStart=/usr/sbin/httpd -f /usr/local/pf/var/conf/httpd.conf.d/httpd.portal -DFOREGROUND  -Drhel
+ExecStart=/usr/sbin/apache2 -f /usr/local/pf/var/conf/httpd.conf.d/httpd.portal -DFOREGROUND  -Ddebian
 ExecReload=/bin/kill -USR1 ${MAINPID}
 ExecStop=/bin/kill -WINCH ${MAINPID}
 # We want systemd to give httpd some time to finish gracefully, but still want
--- a/conf/systemd/packetfence-httpd.proxy.service
+++ b/conf/systemd/packetfence-httpd.proxy.service
@@ -11,7 +11,7 @@
 Type=simple
 PIDFile=/usr/local/pf/var/run/httpd.proxy.pid
 ExecStartPre=/usr/local/pf/bin/pfcmd service httpd.proxy generateconfig
-ExecStart=/usr/sbin/httpd -f /usr/local/pf/var/conf/httpd.conf.d/httpd.proxy -DFOREGROUND  -Drhel
+ExecStart=/usr/sbin/apache2 -f /usr/local/pf/var/conf/httpd.conf.d/httpd.proxy -DFOREGROUND  -Ddebian
 ExecReload=/bin/kill -USR1 ${MAINPID}
 ExecStop=/bin/kill -WINCH ${MAINPID}
 # We want systemd to give httpd some time to finish gracefully, but still want
--- a/conf/systemd/packetfence-httpd.webservices.service
+++ b/conf/systemd/packetfence-httpd.webservices.service
@@ -11,7 +11,7 @@
 Type=simple
 PIDFile=/usr/local/pf/var/run/httpd.webservices.pid
 ExecStartPre=/usr/local/pf/bin/pfcmd service httpd.webservices generateconfig
-ExecStart=/usr/sbin/httpd -f /usr/local/pf/var/conf/httpd.conf.d/httpd.webservices -DFOREGROUND  -Drhel
+ExecStart=/usr/sbin/apache2 -f /usr/local/pf/var/conf/httpd.conf.d/httpd.webservices -DFOREGROUND  -Ddebian
 ExecReload=/bin/kill -USR1 ${MAINPID}
 ExecStop=/bin/kill -WINCH ${MAINPID}
 # We want systemd to give httpd some time to finish gracefully, but still want
--- a/conf/systemd/packetfence-iptables.service
+++ b/conf/systemd/packetfence-iptables.service
@@ -7,8 +7,8 @@
 StartLimitInterval=60
 Type=oneshot
 RemainAfterExit=yes
-ExecStart=/bin/perl -I/usr/local/pf/lib -Mpf::db -Mpf::services::manager::iptables -e 'my $db ; while(!$db) { eval { $db = db_connect() } ; sleep 1 } ; pf::services::manager::iptables->new()->_start()'
-ExecStop=/bin/perl -I/usr/local/pf/lib '-Mpf::services::manager::iptables' -e 'pf::services::manager::iptables->new()->_stop()'
+ExecStart=/usr/bin/perl -I/usr/local/pf/lib -Mpf::db -Mpf::services::manager::iptables -e 'my $db ; while(!$db) { eval { $db = db_connect() } ; sleep 1 } ; pf::services::manager::iptables->new()->_start()'
+ExecStop=/usr/bin/perl -I/usr/local/pf/lib '-Mpf::services::manager::iptables' -e 'pf::services::manager::iptables->new()->_stop()'
 Slice=packetfence.slice
 
 [Install]
--- a/conf/systemd/packetfence-statsd.service
+++ b/conf/systemd/packetfence-statsd.service
@@ -9,7 +9,7 @@
 Type=simple
 PIDFile=/usr/local/pf/var/run/statsd.pid
 ExecStartPre=/usr/local/pf/bin/pfcmd service statsd generateconfig
-ExecStart=/usr/bin/node /usr/local/pf/lib/Etsy/statsd/bin/statsd /usr/local/pf/var/conf/statsd_config.js 
+ExecStart=/usr/bin/nodejs /usr/local/pf/lib/Etsy/statsd/bin/statsd /usr/local/pf/var/conf/statsd_config.js 
 Restart=on-failure
 Slice=packetfence.slice
 
--- a/conf/systemd/packetfence-radiusd-acct.service
+++ b/conf/systemd/packetfence-radiusd-acct.service
@@ -12,8 +12,8 @@
 StartLimitInterval=60
 PIDFile=/usr/local/pf/var/run/radiusd-acct.pid
 ExecStartPre=/usr/local/pf/bin/pfcmd service radiusd generateconfig
-ExecStartPre=/usr/sbin/radiusd -d /usr/local/pf/raddb  -n acct -Cxm -lstdout 
-ExecStart=/usr/sbin/radiusd -d /usr/local/pf/raddb  -n acct -fm 
+ExecStartPre=/usr/sbin/freeradius -d /usr/local/pf/raddb  -n acct -Cxm -lstdout 
+ExecStart=/usr/sbin/freeradius -d /usr/local/pf/raddb  -n acct -fm 
 Restart=on-failure
 Slice=packetfence.slice
 
--- a/conf/systemd/packetfence-radiusd-auth.service
+++ b/conf/systemd/packetfence-radiusd-auth.service
@@ -11,8 +11,8 @@
 StartLimitInterval=60
 PIDFile=/usr/local/pf/var/run/radiusd-auth.pid
 ExecStartPre=/usr/local/pf/bin/pfcmd service radiusd generateconfig
-ExecStartPre=/usr/sbin/radiusd -d /usr/local/pf/raddb  -n auth -Cxm -lstdout 
-ExecStart=/usr/sbin/radiusd -d /usr/local/pf/raddb  -n auth -fm 
+ExecStartPre=/usr/sbin/freeradius -d /usr/local/pf/raddb  -n auth -Cxm -lstdout 
+ExecStart=/usr/sbin/freeradius -d /usr/local/pf/raddb  -n auth -fm 
 Restart=on-failure
 Slice=packetfence.slice
 
--- a/conf/systemd/packetfence-radiusd-cli.service
+++ b/conf/systemd/packetfence-radiusd-cli.service
@@ -12,8 +12,8 @@
 StartLimitInterval=60
 PIDFile=/usr/local/pf/var/run/radiusd-cli.pid
 ExecStartPre=/usr/local/pf/bin/pfcmd service radiusd generateconfig
-ExecStartPre=/usr/sbin/radiusd -d /usr/local/pf/raddb  -n cli -Cxm -lstdout 
-ExecStart=/usr/sbin/radiusd -d /usr/local/pf/raddb  -n cli -fm 
+ExecStartPre=/usr/sbin/freeradius -d /usr/local/pf/raddb  -n cli -Cxm -lstdout 
+ExecStart=/usr/sbin/freeradius -d /usr/local/pf/raddb  -n cli -fm 
 Restart=on-failure
 Slice=packetfence.slice
 
--- a/conf/systemd/packetfence-radiusd-eduroam.service
+++ b/conf/systemd/packetfence-radiusd-eduroam.service
@@ -11,8 +11,8 @@
 StartLimitInterval=60
 PIDFile=/usr/local/pf/var/run/radiusd-eduroam.pid
 ExecStartPre=/usr/local/pf/bin/pfcmd service radiusd generateconfig
-ExecStartPre=/usr/sbin/radiusd -d /usr/local/pf/raddb  -n eduroam -Cxm -lstdout
-ExecStart=/usr/sbin/radiusd -d /usr/local/pf/raddb  -n eduroam -fm 
+ExecStartPre=/usr/sbin/freeradius -d /usr/local/pf/raddb  -n eduroam -Cxm -lstdout
+ExecStart=/usr/sbin/freeradius -d /usr/local/pf/raddb  -n eduroam -fm 
 Restart=on-failure
 Slice=packetfence.slice
 
--- a/conf/systemd/packetfence-radiusd-load_balancer.service
+++ b/conf/systemd/packetfence-radiusd-load_balancer.service
@@ -11,8 +11,8 @@
 StartLimitInterval=60
 PIDFile=/usr/local/pf/var/run/radiusd-load_balancer.pid
 ExecStartPre=/usr/local/pf/bin/pfcmd service radiusd generateconfig
-ExecStartPre=/usr/sbin/radiusd -d /usr/local/pf/raddb  -n load_balancer -Cxm -lstdout
-ExecStart=/usr/sbin/radiusd -d /usr/local/pf/raddb  -n load_balancer -fm 
+ExecStartPre=/usr/sbin/freeradius -d /usr/local/pf/raddb  -n load_balancer -Cxm -lstdout
+ExecStart=/usr/sbin/freeradius -d /usr/local/pf/raddb  -n load_balancer -fm 
 Restart=on-failure
 Slice=packetfence.slice
 
--- a/conf/systemd/packetfence-routes.service
+++ b/conf/systemd/packetfence-routes.service
@@ -8,8 +8,8 @@
 StartLimitInterval=60
 Type=oneshot
 RemainAfterExit=yes
-ExecStart=/bin/perl -I/usr/local/pf/lib '-Mpf::services::manager::routes' -e 'pf::services::manager::routes->new()->_start()'
-ExecStop=/bin/perl -I/usr/local/pf/lib '-Mpf::services::manager::routes' -e 'pf::services::manager::routes->new()->_stop()'
+ExecStart=/usr/bin/perl -I/usr/local/pf/lib '-Mpf::services::manager::routes' -e 'pf::services::manager::routes->new()->_start()'
+ExecStop=/usr/bin/perl -I/usr/local/pf/lib '-Mpf::services::manager::routes' -e 'pf::services::manager::routes->new()->_stop()'
 Slice=packetfence-base.slice
 
 [Install]
