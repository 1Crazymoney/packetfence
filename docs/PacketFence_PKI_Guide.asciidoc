PKI Quick Installation Guide
============================
:encoding: UTF-8
:lang: en
:doctype: book

include::includes/global-attributes.asciidoc[]

About this Guide
----------------

This guide has been created to give a quick start to install the PacketFence PKI in PacketFence 5.2+. This guide does not include advanced troubleshooting of EAP-TLS connection. Refer to the documentation of EAP-TLS, RADIUS and OpenSSL for advanced features.

Assumptions
-----------

* You have at least one server with PacketFence 5.2+
* The server already has a properly configured switch with 802.1X support
* PacketFence RADIUS server is working in your environnement
* PacketFence management IP will be 192.168.1.5 and has useStrongerSecret as it's RADIUS shared secret

Installation
------------

Step 1: Install the PKI
~~~~~~~~~~~~~~~~~~~~~~~

NOTE: PacketFence PKI is available on the PacketFence repository as the package "packetfence-pki". This is available for CentOS6/7 and Debian7/8.

Installing 
^^^^^^^^^^

First of all you have the choice to install the packetfence-pki on a stand alone machine or on the PacketFence machine.

For the stand alone you need to open the port 9393 in tcp to be able to reach the pki.

If you install the pki on a PacketFence server, you need to do the following:

 # cd /usr/local/pf
 # vim conf/iptables.conf
 
Uncomment this line and restart the service iptables:

 # -A input-management-if --protocol tcp --match tcp --dport 9393 --jump ACCEPT
 # bin/pfcmd service iptables restart
 
You now need to install the package, use the following command matching your OS.

Debian/Ubuntu:

 # sudo apt-get install packetfence-pki

CentOS/RHEL:

 # yum install packetfence-pki --enablerepo="packetfence-extra, packetfence-devel"

Step2: Configuring the PKI
~~~~~~~~~~~~~~~~~~~~~~~~~~

PacketFence-PKI Configuration
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

NOTE: The following configuration will allow you to generate certificates for an EAP-TLS configuration, if you want to use the PKI for another purpose you will have to adjust the Key Usage/Extended Key Usage necessary.

Now that your PKI is installed, you need to configure it.

PKI configuration
^^^^^^^^^^^^^^^^^

You will first need to log into the PKI:

* Address: https://192.168.1.5:9393
* Login: admin
* Password: p@ck3tf3nc3

After you login there are few steps to follow to have the PKI working for an EAP-TLS configuration with PacketFence. You will need to create the following items: 

* Certificate of Authority
* Profiles(for each purpose, i.e. Server/Client auth are 2 different profiles)
* Rest API
* Manual certificate generation.(for the RADIUS server)
* PKI Provider
* Provisioner

Follow the three step wizard to create your Certificate of Authority, your Client profile and your Rest API.

Certificate of Authority
^^^^^^^^^^^^^^^^^^^^^^^^

image::docs/images/myca.png[scaledwidth="100%",alt="Certificate of Authority"]

image::docs/images/myca2.png[scaledwidth="100%",alt="Certificate of Authority"]

* Cn: Subject of the certificate of authority
* Mail: Email address of the admin or any other mail that suit your situation
* Organisation: Name of your company
* Country: Country (select in the list)
* State: state code (i.e. NY, CA, QC, etc...)
* Locality: City where is the organisation 
* Key type, size and digest: we advise to use the following RSA, 2048, sha1
* Key Usage and Extended Key Usage are not necessary for the Certificate of Authority
* Days: Number of validity days, i.e. 10y = 3560

CAUTION: Remember that after the expiration date of your Certificate of Authority is passed, every certificate generated by it will not be valid anymore. We advise to get at least 10years for the CA, like this you ill not have to worry about renewal over time for the certificate generation.

Profile
^^^^^^^

image::docs/images/client-profile.png[scaledwidth="100%",alt="Client Profile configuration"]

image::docs/images/client-profile2.png[scaledwidth="100%",alt="Client Profile configuration"]

Creation of a profile:

* Name: MyClientProfile
* CA: The certificate of authority you created earlier
* Validity: Number of validity days, i.e. 2y = 730
* Key type, size and digest: we advise to use the following RSA, 2048, sha1
* Key Usage: Empty 
* Extended Key Usage: 
** Server certificate authentication profile: TLS Web Server Authentication or servAuth, 
** Client certificate authentication profile: TLS Web Client Authentication or clientAuth, 

Information about Key Usage and Extended Key Usage are available from RFC5280, parts 4.2.1.3 and 4.2.1.12.

* The P12 mail setup is mandatory for the server authentication profile. This is a way to get the certificate with his password by email using the *send certificate* button. 
** If your mail alerts are already working with PacketFence you should use the following:
*** P12 smtp server: 127.0.0.1
*** Tick P12 mail password

For the header, from, subject and footer this part is the customization of the mail, it is configurable as you want it for your company. An example of value would be:

* From: pki@packetfence.pki
* Subject: Certificate for client
* Header: Below you will find your certificate and it's password to install it
* Footer: This email has been generated automatically, please do not reply

Rest API
^^^^^^^^

image::docs/images/rest-api.png[scaledwidth="100%",alt="Rest API configuration"]

Follow the configuration as the image above, it is quite simple, you need to define which user will have access to make requests on the API.
You can setup admin for now and assign other users afterwards.

RADIUS server authentication certificate
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Generate a certificate from the profile you defined as the server authentication profile. This certificate will need to be installed and configured as the certificate for authenticate RADIUS.

image::docs/images/radius-profile.png[scaledwidth="100%",alt="RADIUS server certificate"]

image::docs/images/radius-profile2.png[scaledwidth="100%",alt="RADIUS server certificate"]

To fill this profile, follow the screenshots. Make sure to have TLS Web Server Authentication or serverAuth as your Extended Key Usage.

CAUTION: We advise to use a long validity for your RADIUS server certificate to avoid renew it often(i.e. 3650d at least).

Revokation process
^^^^^^^^^^^^^^^^^^

We have two ways to check if a certificate is valid, you can either use OCSP to interogate the PKI if the certificate is still valid, or use the revokation lists(CRL). 

OSCP is scalable, its main downside would be that one request per certificate authentication is sent to the PKI to verify if the certificate is still valid.

With the CRL, everytime the CRL is updated, every equipement that uses this CRL has to download it again. For security reason we advise to have a small delay on CRL expiration(to avoid using revoked certificate on the network).

By default a CRL list will be created when you revoke a certificate. The file will be under /usr/local/packetfence-pki/ca/YourProfileName.crl. Note that one CRL by profile will be created.

User creation
^^^^^^^^^^^^^

If you want to add some user for specific tasks, just go through Configuration -> Users -> Create
Configured all the fields.

You can now edit the Rest API and allow your newly created user to make request for certificate for instance.

Step3: Configuring PacketFence
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

PacketFence PKI
^^^^^^^^^^^^^^^

To work with our PKI in PacketFence you will need to add the PKI in the PKI Provider section.

Click on add a new PKI and select PacketFence PKI.

Follow the instructions below to fill the PacketFence PKI configuration.

image::docs/images/packetfence-pki-provider.png[scaledwidth="100%",alt="PacketFence PKI configuration"]

image::docs/images/packetfence-pki-provider2.png[scaledwidth="100%",alt="PacketFence PKI configuration"]

Every fileds are explained in attached screenshot.

Path need to be absolute (i.e. /usr/local/pf/conf/ssl/tls-cert/MyCA.pem is absolute, conf/ssl/tls-cert/MyCA.pem is relative)

You have to chose to use the onBoarding certificate using MacAddress or Username, this will define how you can revoke/deliver certificate. If you chose MacAddress, every user will need to register all of his devices using PacketFence onBoarding system, you can limit the number of max devices per user. If you revoke one certificate it will only block the device linked to this certificate. 

If you want to use the Username, you will be able to revoke every user devices at one time, since the user will have to use the same certificate on all of his devices. 

This option should be the one matching your case at the closest.

Certificate storage on PacketFence
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 
First we advise to create a directory in a way to split EAP-TLS certificate and others.

 # mkdir /usr/local/pf/conf/ssl/tls_certs/

Place yourself in the folder where CA was created.

 # cd /usr/local/packetfence-pki/ca/
 # cp YourCA.pem /usr/local/pf/conf/ssl/tls_certs/
 # chown pf:pf /usr/local/pf/conf/ssl/tls_certs/*

For the RADIUS server authentication you will have 2 files, the certificate file and private key, you need both for RADIUS to work properly.

Now you can use the *send certificate* or *download certificate* to have it available. You will receive by email or in your downloads section the certificate in P12 format. 

You need to open it, your operating system should be able to recognize it and will ask you for a password. You have received this password by mail. After you opened it you should have 2 files in the P12 object, the certificate file and the private key, both will need to be copy into the ssl directory. 

If you use Linux or MacOS system apply the folowwing command:

 # scp /path/to/your/downloads/YourCert.* root@192.168.1.5:/usr/local/pf/conf/ssl/tls_certs/

If you use a Windows system you will need to use WinSCP to transfer over the certificate files.

When you will download or send the certificate the password will arrive by mail, if you don't receive anything you can look around to see if postfix is properly configured and you filled the information for *Mail P12* as intended.

RADIUS EAP-TLS and packetfence-pki
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Verify that all the files needed are here in the right folder, do the following command:

 # ls -l /usr/local/pf/conf/ssl/

You need to have YourCA.pem, YourCert.pem and YourCert.key.

Now we need to change FreeRADIUS configuration to allow the use of thoses certificates. To accomplish this do the following in PacketFence cli:

 # cd /use/local/pf
 # vi conf/radiusd/eap.conf

Now search for the tls module and modify those lines:

 # private_key_file = %%install_dir%%/conf/ssl/server.key
 # certificate_file = %%install_dir%%/conf/ssl/server.pem

in this:

 # private_key_file = %%install_dir%%/conf/ssl/tls_certs/YourCert.key
 # certificate_file = %%install_dir%%/conf/ssl/tls_certs/YourCert.pem
 # CA_file = %%install_dir%%/conf/ssl/tls_certs/YourCA.pem

When this is done you need to restart RADIUS using the following

 # bin/pfcmd service radiusd restart

Provisioners configuration
~~~~~~~~~~~~~~~~~~~~~~~~~~

Once your pki provider is configured we will create the provisioner configuration.

Here is an example on how to configure an EAP-TLS connection for Windows/Android/MacOS/iOS

image::docs/images/eaptls-example.png[scaledwidth="100%",alt="Provisioner EAP-TLS configuration"]

* Provisioning ID: Name of your provisioner in PacketFence and of the profile on MacOS/iOS when installed
* Roles: roles that will be affected by this provisioner
* SSID: SSID to connect at after provisioning
* Security type: You need to select the security type as *WPA2* to unlock access to *EAP type*, when you will chose *EAP-TLS* as an eap type, the PKI Provider will unlock
* PKI Provider: chose the provider you configured earlier

For MacOS/iOS you have a tab 'Signing' available, this tab will make your profile *Trusted* when trying to install on Apple device.

image::docs/images/eaptls-sign-example.png[scaledwidth="100%",alt="Signing provisioner"]

To initiate the signing, you will need a Certificate deliver by a trusted provider(i.e. VeriSign, GoDaddy, etc...), the chain of certificate going with (i.e. gd-bundle.crt).

Once you have all those files, you will need to open them, and copy their content from *-----BEGIN CERTIFICATE-----* to *-----END CERTIFICATE-----* not included into the right text input.

Additionnal information
-----------------------

If you need any additional information for the certificate generation we advise you to use the RFC5280.
