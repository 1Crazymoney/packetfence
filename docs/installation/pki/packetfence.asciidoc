// to display images directly on GitHub
ifdef::env-github[]
:encoding: UTF-8
:lang: en
:doctype: book
:toc: left
:imagesdir: ../../images
endif::[]

////

    This file is part of the PacketFence project.

    See PacketFence_Installation_Guide.asciidoc
    for authors, copyright and license information.

////


//=== PacketFence PKI

This section has been created to give a quick start to configure the PacketFence PKI in PacketFence. This guide does not include advanced troubleshooting of EAP-TLS connections. Refer to the relevant documentation of EAP-TLS, RADIUS and OpenSSL for advanced features. The PKI comes installed by default since PacketFence version 10. All certificates would be saved in the database. If you want to migrate your certificate from the old PacketFence PKI please see the upgrade section.

==== Certificate Authority creation


You will need to create a new certificate authority. Go to the PacketFence web administration under the section Configuration -> Integration -> PKI -> Certificate Authorities and click on *New Certificate Authority*

image::packetfence-pki-ca_menu.png[scaledwidth="100%",alt="Certification authority creation"]

===== Here's a CA example:

image::packetfence-pki-ca_creation.png[scaledwidth="100%",alt="Certification authority creation"]

===== Once you have created the CA, you should see the Root CA certificate displayed at the bottom of the page:

image::packetfence-pki-ca_created.png[scaledwidth="100%",alt="Certification authority config"]

Once done copy the certificate in the clipboard from the Certificate Authorities list (Configuration -> Integration -> PKI -> Certificate Authorities and click on *Copy Certificate*) then edit the RADIUS certificate section in Configuration -> Systen Configuration -> SSL Certificates -> RADIUS -> Edit and paste the public key in "Certificate Authority" and Save. (Don't forget to restart radiusd-auth)

This will authorize the EAP TLS authentications using the PKI issued certificates.

==== Template creation

Now you will need to create a certificate template that will gather all the settings for your certificate like the validity period or the certificate usage.

===== Select the Certificate Authority previously created:

image::packetfence-pki-template_menu.png[scaledwidth="100%",alt="Template configuration"]

===== Here's a template example:

image::packetfence-pki-template_creation.png[scaledwidth="100%",alt="Template configuration"]

Key usage clientAuth: To use your certificate for a client authentication.

Key usage serverAuth: If you want to install your certificate on a server.

===== P12 mail password emailed to the users:

image::packetfence-pki-template_password_email.png[scaledwidth="100%",alt="Template configuration"]

==== Certificate creation

image::packetfence-pki-certificate_menu.png[scaledwidth="100%",alt="Certificate creation"]

image::packetfence-pki-certificate_creation.png[scaledwidth="100%",alt="Certificate creation"]

===== Once it's created, you can send it to the email user or download the p12 format:

image::packetfence-pki-certificate_download.png[scaledwidth="100%",alt="Certificate creation"]

==== PEM format

The PacketFence PKI hand out PKCS12 certificates, if you want to convert your certificate to PEM format, you can use the commands:

----
openssl pkcs12 -in YourCert.p12 -nocerts -out YourCert.key -nodes
openssl pkcs12 -in YourCert.p12 -out YourCert.pem -clcerts -nokeys
----

==== Revoke a certificate

If you revoke a certificate it can't be recovered and you would need to recreate a new one. You will need to specify a reason of the revokation.

===== Click on the *Revoke* button on the certificate:

image::packetfence-pki-revoked_certificate.png[scaledwidth="100%",alt="Revoke a certificate"]

==== PKI Provider

You can hand out certificate to non-BYOD device on a captive portal.

First, you would need to create the PKI provider that will query the PacketFence PKI for new certifcate. Go to Configuration -> Advanced Access Configuration -> PKI provider

image::packetfence-pki-pki-provider_menu.png[scaledwidth="100%",alt="PKI Provider"]

===== Create a certificate per user or per device mac address, this example will cover one certificate per device:

image::packetfence-pki-pki-provider_creation.png[scaledwidth="100%",alt="PKI Provider"]


==== Intune Integration

===== Azure configuration

You can hand out certificates when you use intune enrolment.

First you need to create an application on Azure that allow PacketFence to connect to the Intune API.

To do that first you have to go in Azure portal and App registration then click "New registration"

image::Intune-1-App-Registration.png[scaledwidth="100%",alt="App-Registration"]

Next set a Name and in "Supported account types" select "Accounts in this organizational directory only" then click "Register"

image::Intune-2-Register-Application.png[scaledwidth="100%",alt="Register-Application"]

On the next page you have to copy the "Application (Client) ID" and the "Directory (tenant) ID", thoses will be needed to configure PacketFence.

image::Intune-3-App-Detail.png[scaledwidth="100%",alt="Application-Detail"]

Then you need to generate a "Client secrets", to do that click on "Add a certificate or secret" 

image::Intune-4-App-Certificates-Secrets.png[scaledwidth="100%",alt="App-Certificates-Secrets"]

image::Intune-5-Add-Client-Secret.png[scaledwidth="100%",alt="Add-Client-Secret"]

Copy the "Value" of the secret, this is the only time you should be able to see it.

image::Intune-6-Copy-Client-Secret.png[scaledwidth="100%",alt="Copy-Client-Secret"]

Next you have to add API permissions, click on "API permissions" -> "Add a Permissions" and search for Intune and select "scep_challenge_provider".

image::Intune-7-API-Permissions.png[scaledwidth="100%",alt="API-Permissions"]

Last step is to "Grant admin", just click on "Grant admin consent for ..." and click "Yes"

image::Intune-8-Grant-Admin.png[scaledwidth="100%",alt="Grant-Admin"]