Microsoft PKI (MSPKI) Quick Installation Guide
==============================================
:encoding: UTF-8
:lang: en
:doctype: book

include::includes/global-attributes.asciidoc[]

About this Guide
----------------

This guide has been created to give a quick start to configure the Microsoft PKI with PacketFence 5.4+. This guide does not include advanced troubleshooting of EAP-TLS connections. Refer to the relevant documentation of EAP-TLS, RADIUS and OpenSSL for advanced features.

Assumptions
-----------

* You have at least one server with PacketFence 5.4 or later.
* The server already has a properly configured switch with 802.1X support.
* The PacketFence RADIUS server is working in your environment.
* You have an Active Directory server or another Microsoft Windows 2008 R2 server installed.
* The PacketFence management IP will be 192.168.1.5.
* The RADIUS shared secret is "useStrongerSecret".

Installation
------------

Step 1: Install Active Directory Certificate Service (ADCS)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

NOTE: This will cover the configuration for Active Directory Certificate Services (ADCS) on Microsoft Windows 2008 R2. This configuration has been tested to be integreted with PacketFence. The installation of ADCS is not cover by this guide see the Microsoft white paper about it for more information (http://social.technet.microsoft.com/wiki/contents/articles/9063.network-device-enrollment-service-ndes-in-active-directory-certificate-services-ad-cs.aspx).

Communication between MSPKI and PacketFence will be using port 80 or 443 depending on your configuration.

Configuring Network Device Enrollement Service (NDES)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Our main activity in the deployment of ADCS is to configure Network Enrollement Device Service (NDES) which will allow us to exchange certificate with the MS PKI server via the protocol Simple Certificate Exchange Protocol (SCEP).

Every configuration change has to be done by an account with administrative privileges.

To allow the use of NDES as a Pki-Provider in BOYD deployement there is multiple changes.

Challenge Password
^^^^^^^^^^^^^^^^^^

MSCEP include by default a challenge password, which is unique and dynamically generated for each device which want to enroll on the system. The issue here while using the challenge password is that it is necessary for an administrator to connect to the NDES server from the user's device. This a barrier to BOYD deployement for instance, where you want the user to be able to register himself his device. Since we use NDES with PacketFence, our security to obtain a certificate would be the credetials necessary to access the enrollement system.

To disable the challenge password you need to modifiy the following key in the Windows registry. 

Click `Start` and enter `regedit`.

Navigate to `Computer` > `HKEY_LOCAL_MACHINE` > `SOFTWARE` > `Microsoft` > `Cryptography` > `MSCEP` > `EnforcePassword`.

Change the value of `EnforcePassword` to `0` (default is `1`).

Extend URL length for the request
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Best practices from Cisco recommand to extend the URL length to avoid issue with longer request. 

To do so, enter the following command in the CLI on the NDES server:

 %systemroot%\system32\inetsrv\appcmd.exe set config /section:system.webServer/
 security/requestFiltering /requestLimits.maxQueryString:"8192" /commit:apphost

Certificate template 
^^^^^^^^^^^^^^^^^^^^

NOTE: Remember that the validity of your CA can impact your whole certificate architecture.

The main goal is to deliver certificate for either `user Authentication` or `machine Authentication`, this mean we have to setup a specific template.

First, indepandent of which type of authentication you will use, the certificate template need at least the following `Enhanced Key Usage`:

* Client Authentication

and the following `Key Usage`:

* Digital signature
* Key encipherment

Then if you want to use machineAuth you should duplicate the template `Computer` and change the settings that suits your use of certificate. To force a template to deliver Machine certificates, go to the tab `Subject Name` and select `Type of subject` > `Computer or other device`.

For the userAuth we advice to duplicate the template `User` and change the necessary settings.

With PacketFence integration, you need also to change another setting in the tab `Subject Name`. Make sure to select `Supplied in the request` over `Built from information in Active Directory`, else the requested CN will be overwritten by NDES.

Now that you chose your type of authentication and which template to deliver you need to configure this template in the registry.

Press `Start` and type `regedit` in the search bar.

While in the registry navigate to `Computer` > `HKEY_LOCAL_MACHINE` > `SOFTWARE` > `Microsoft` > `Cryptography` > `MSCEP`.

Here you should have a list of three keys entries: 

* EncryptionTemplate, 
* GeneralPurposeTemplate,
* SignatureTemplate.

Replace each value with our newly created template. The default value should be `IPSec(Offile Request)`.

You now need to reboot the NDES server to apply changes to the registry.

OCSP
^^^^

For the configuration of OCSP with a Microsoft Windows 2008 R2, there is small changes to apply.

After the installation of OCSP we need to create a "Revocation Configuration".

Expand OnlineResponder: YourServerName, right click on "Revocation Configuration", select `Add Revocation Configuration`, click `Next`, chose aname for your configuration, click `Next`. Chose `Select a certificate for an existing entreprise CA`, click `Next`. Click `Browse` and find your entreprise CA in the list, select it, click `OK` and then `Next`. Chose `Automatically select a signing certificate`, make sure `Auto-Enroll for and OCSP signing certificate` is selected, then chose the default template of OCSP which is `OCSPResponseSigning` in the drop down list next to `Certificate Template:`. You need to add providers only if you whish to use some CRL in addition to OCSP.

Once created, right click the revocation configuration and select `Edit properties`, go to the tab `Signing`, here you need to select `Enable NONCE extension support` then click `OK`.

Verify that your OCSP is in the settings of the CA. Right click your CA, chose `Properties`. Navigate to the tab `Extension`, in the drop down list `Select extension` chose `Authority Information Access (AIA)`. Make sure that you have the following in the list of locations: `http://<fqdn of ndes server>/ocsp`, if you do not have it, add it via the button `Add...`. Also verify if `Include in the online certificate status protocol(OCSP) extension`.

Certificate generation
^^^^^^^^^^^^^^^^^^^^^^

Using the PKI of Microsft include that all your certificate will be deliver by the root CA of the PKI. The public key of this certificate is necessary on PacketFence. 

As for RADIUS authentication we will need to generate a certificate for FreeRADIUS in PacketFence.

The template `WebServer` match most of what we need for the creation of the RADIUS certificate. 

Duplicate the template `WebServer` and change the following settings inside the template, in the tab `Request Handling` tick the case `Allow private key to be exported`.

For the RADIUS server certificate we also advice to change the validity of it's template. We advice to use a longer time here e.g. 10years.

After this template creation we will need to create the certificate.

Press `Start` and type mmc.exe, go to `options` > `add/remove Snap-in`, select `Certificates` and chose `Computer Account`.

In your mmc expand `Certificates` and right click `Personal` > `All tasks` > `Request new certificate`. Click `Next` then chose `Active Directory Enrollement Policy` and click `Next` again. Select the template you created earlier for the RADIUS server. You should have the following message with an exclamation mark at the start: `More information is required to enroll for this certificate. Click here to configure settings`. Click it.

In the settings we will add a CN, the Country, the State, Organization, Locality and Organization Unit.

Here is an example of valid values:

* CN=packetfence.local
* C=CA
* ST=QC
* Locality=Montreal
* Organization=Inverse
* Organization Unit=IT

The tab `General` is here if you need a description for which device the certificate is. In the tab `Private Key` verify that `Make private key exportable` is checked.

When you finished fill the necessary informations click `Apply`, `OK` and then `Enroll`.

Your certificate is know install in the store computer, you will need to export it to PacketFence.

Go in your computer personal store: `Personal` > `Certificate` and right click your newly created certificate. Chose `All tasks` > `Export...`.

In the export menu, click `Next`, check the box `Yes, export the private key` and click `Next`. In the next step, select `Personal Information Exchange - PKCS12 (.PFX)`, click `Next` and chose a password, this will be use once to change the certificate fromat from PKCS12 to PEM. Now you need to chose the file name under which you will save the PKCS12 file. Click `Next`, use this step to double check the information you input, when done click `Finish`.

Copy this file from the NDES server to PacketFence, using WinSCP is a good way to do it.

CA certificate
^^^^^^^^^^^^^^

For FreeRADIUS to work we will also need the CA certificate on PacketFence. The easiest way to export it, is to use the mmc we used for the RADIUS server certificate. This mmc allow access to computer certificate. Your ROOT certificate should be accessible from `Personal` > `Certificates`. Once you found it, right click on it and select `All tasks` > `Export...`. 

This time we should not export the private key. Make sure that `No, do not export the private key` is selected while trying to export the certificate. Chose the `DER encoded binary X.509(.CER)` and click `Next`, chose your file name to export it and click `Next`. Verify the information you input and click `Finish`.

Copy the file over to PacketFence server, using WinSCP is good way to do it.

Step 2: Configuring PacketFence
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Certificate storage on PacketFence
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 
It is recommended to create a separate directory to separate EAP-TLS certificates from server certificates:

 # mkdir /usr/local/pf/conf/ssl/tls_certs/

RADIUS EAP-TLS authentication requires three files, the CA certificate, the server certificate and the private key.

Convert the CA to a pem format using openssl tool:

 # openssl x509 -inform DER -in MyCA.cer -outform PEM -out /usr/local/pf/conf/ssl/tls_certs/MyCA.pem

Then, convert the pfx(pkcs12) file to the pem format using the openssl tool(the password is the one you chose when you exported the certificate form the NDES server):

 # openssl pkcs12 -in YourCert.p12 -nocerts -out /usr/local/pf/conf/ssl/tls_certs/YourCert.key -nodes
 # openssl pkcs12 -in YourCert.p12 -out /usr/local/pf/conf/ssl/tls_certs/YourCert.pem -clcerts -nokeys

Ensure that the files are readable by "pf": 

 # chown pf:pf /usr/local/pf/conf/ssl/tls_certs/*
 
RADIUS EAP-TLS and MSPKI
^^^^^^^^^^^^^^^^^^^^^^^^

Using the PKI generated certificates requires editing the radius EAP configuration file.

Edit the /usr/local/pf/conf/radiusd/eap.conf file and replace the following lines with references to your new certificates in the 'tls' configuration block:

 private_key_file = %%install_dir%%/conf/ssl/server.key
 certificate_file = %%install_dir%%/conf/ssl/server.pem

E.g.

 private_key_file = %%install_dir%%/conf/ssl/tls_certs/YourCert.key
 certificate_file = %%install_dir%%/conf/ssl/tls_certs/YourCert.pem
 CA_file = %%install_dir%%/conf/ssl/tls_certs/MyCA.pem


Certificate revocation checks also have to be configured using OCSP in the same block.

For example: 

    ocsp {
        enable = yes
        override_cert_url = yes
        url = "http://<fqdn of the ndes server>/ocsp"
    }


Restart radiusd to regenerate the new configuration files and enable EAP-TLS using your CA signed certificates:

 # /usr/local/pf/bin/pfcmd service radiusd restart

PacketFence provider configuration
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Using the PKI requires configuring the PKI providers section in the PacketFence GUI under Configuration > Users.
The provider configuration defines how PacketFence connects to the MS PKI and what informations will be send.


Add a new PKI provider and select MS PKI.

Fill out the form for a PKI provider according to your Certificate of Authority configuration.

image::docs/images/packetfence-pki-provider.png[scaledwidth="100%",alt="PacketFence PKI configuration"] *TO RENEW*

image::docs/images/packetfence-pki-provider2.png[scaledwidth="100%",alt="PacketFence PKI configuration"] *TO RENEW*

The "server certificate path" and "CA cert path" both need to be absolute (e.g. /usr/local/pf/conf/ssl/tls_certs/MyCA.pem is an absolute path).

The "Common name attribute" field defines how the certificate will be generated and what type of "ownership" will associate the certificate to the connection.
If you select 'MAC address', a certificate will be generated for the device itself using the MAC address as the identifier.
If you select 'Username', a certificate will be generated for the user using his login name on the authentication backend (e.g. Active-Directory).

This means that revoking the certificate for a username based certificate will block all the devices that this user registered.
If you generate the certificates using the MAC address, revoking a certificate will block only that device.

Provisioners configuration
^^^^^^^^^^^^^^^^^^^^^^^^^^

Provisioners allow devices to automatically configure themselves to connect to the proper SSID (if applicable), use the proper authentication method (e.g. EAP-TLS) and trust the CA certificate and any certificate signed by it.

Provisioners are configured in the PacketFence administration GUI under Configuration > Users > Provisioners.

Add a new provisioner for each of the classes of devices to be supported amongst Android, Apple Devices and Windows.
Fill out the form, choosing a different Provisioning Id per provisioner.

The fields affect the provisioning behavior in the following fashion:

* Roles: The "Roles" field defines which devices will be affected by the provisioning item. If empty all devices for this class will be affected.
* SSID: The "SSID" field defines which SSID will be configured on the device using the authentication profile.
* EAP-Type: The EAP type defines the authentication method supported and should be set to EAP-TLS to integrate with the PacketFence PKI.
* Security type: The security type should be set to WPA2 to integrate with the PacketFence PKI.
* PKI Provider: This should match the provider you configured earlier in the section on providers.

The following is an example on how to configure an EAP-TLS connection for Windows/Android/OS X/iOS

image::docs/images/packetfence-pki-eaptls-example.png[scaledwidth="100%",alt="Provisioner EAP-TLS configuration"]

OS X/iOS require signing the provisioning profile with a Certification Authority already trusted by the device such as e.g. VeriSign.
Configuring this has to be done in the 'Signing' tab in the "Apple devices". 

image::docs/images/packetfence-pki-eaptls-sign-example.png[scaledwidth="100%",alt="Signing provisioner"]

Fill out the fields with the contents of the Base64 encoded certificates.
To extract this information from a pem formatted certificate, copy the file content included between the begin and end tag, not including the delimiters themselves.
For instance if the file content is:

----
----- BEGIN CERT -----
1234567890asdfghjkl
zxcvbnmqwertyuiop78
----- END CERT -----
----

Copy everything between the BEGIN and END lines, but not the lines themselves.
Repeat this operation for the certificate key and intermediate certificate if any.


Portal Profiles Configuration
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Provisioners have to be enabled on the Portal Profiles configuration in the PacketFence GUI.

Under Configuration > Main > Portal Profiles, select each of the provisioners created above which should be active for the profile.
If no portal profile is defined, configure the "default" profile to use the provisioners created.

NOTE: If you use two different portal profiles for the open and secure networks, make sure you configure the provisioners on both profiles.


Passthroughs required for Android
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Android devices require passthroughs to be created to allow them to fetch the configuration application from the Play Store.

Add the following to the "Trapping" section of the Configuration tab in the PacketFence GUI.

----
passthrough=enabled
passthroughs=*.ggpht.com,*.googleusercontent.com,android.clients.google.com,
  *.googleapis.com,*.android.clients.google.com,*.gvt1.com
----
