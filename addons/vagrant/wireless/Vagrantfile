# -*- mode: ruby -*-
# vi: set ft=ruby :

# Require YAML module
require 'yaml'
 
# Read YAML file with box details
inventory = YAML.load_file('inventory/hosts')
networks = inventory['all']['vars']['networks']

Vagrant.configure("2") do |config|
  inventory['all']['children']['wireless']['hosts'].each do |server,details|
    config.vm.define server, autostart: false do |srv|

      srv.vm.box = details['box']
      srv.vm.hostname = server

      srv.vm.provider "libvirt" do |v|
        v.cpus = details['cpus']
        v.memory = details['memory']
      end

      # mgmt
      # libvirt__forward_mode: "route" mean:
      # Allow inbound, but only to our expected subnet. Allow outbound, but
      # only from our expected subnet. Allow traffic between guests. Deny
      # all other inbound. Deny all other outbound.
      srv.vm.network "private_network",
                     :libvirt__network_name => networks[0]['name'],
                     :ip => details['mgmt_ip'],
                     :netmask => details['mgmt_netmask'],
                     :libvirt__dhcp_enabled => false,
                     :libvirt__forward_mode => networks[0]['forward_mode']
      # link reg_network (vlan 2)
      srv.vm.network "private_network",
                     :mac => "44:34:22:11:00:02",
                     :libvirt__network_name => networks[1]['name'],
                     :ip => "172.17.2.100",
                     :netmask => networks[1]['netmask'],
                     :libvirt__dhcp_enabled => false,
                     :libvirt__forward_mode => networks[1]['forward_mode']
      # link iso_network (vlan 3)
      srv.vm.network "private_network",
                     :mac => "44:34:22:11:00:03",
                     :libvirt__network_name => networks[2]['name'],
                     :ip => "172.17.3.100",
                     :netmask => networks[2]['netmask'],
                     :libvirt__dhcp_enabled => false,
                     :libvirt__forward_mode => networks[2]['forward_mode']
                     
      # we mount test dir and local repo in VM
      # override to avoid issue with symlink without referent
      # see https://github.com/hashicorp/vagrant/issues/5471
      srv.vm.synced_folder "../../t", "/src/t", type: "rsync", rsync__args: ["--verbose", "--archive", "--delete", "-z"]
      srv.vm.synced_folder "../../public", "/src/public", type: "rsync", rsync__args: ["--verbose", "--archive", "--delete", "-z"]

      # reset communicator to make /etc/environment variables available for next scripts
      srv.vm.provision "reset", type: "shell" do |config|
        config.reset = true
      end

      # shell provisioner to run configurator
      srv.vm.provision "run-configurator", type: "shell" do |config|
        config.inline = "make -C /src/t/venom configurator"
      end

    end
  end
end
