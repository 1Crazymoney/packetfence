---
# force value to simplify tests outside CI
gitlab_buildpkg_tools__ppa_enabled: True

# use repo generated by 'publish' stage
gitlab_buildpkg_tools__ppa_url: 'http://inverse.ca/downloads/PacketFence/gitlab/{{ pipeline_id }}'
gitlab_buildpkg_tools__ppa_url_deb: '{{ gitlab_buildpkg_tools__ppa_url }}/debian'
gitlab_buildpkg_tools__ppa_url_rpm: '{{ gitlab_buildpkg_tools__ppa_url }}/centos'

# override defaults because:
# - dnf supports natively priority
gitlab_buildpkg_tools__rpm_deps_pkgs:
  - 'gnupg2'

# redefine this variables to avoid confusion with official "packetfence" repositories
gitlab_buildpkg_tools__deb_ppa:
  - name: 'packetfence-ppa'
    baseurl: "{{ gitlab_buildpkg_tools__ppa_url_deb }} {{ ansible_lsb['codename'] }} main"
    gpgkey: 'http://inverse.ca/downloads/GPG_PUBLIC_KEY'

gitlab_buildpkg_tools__rpm_ppa:
  - name: 'packetfence-ppa'
    baseurl: '{{ gitlab_buildpkg_tools__ppa_url_rpm + "/$releasever/$basearch" }}'
    gpgkey: 'http://inverse.ca/downloads/GPG_PUBLIC_KEY'
    # always prefered this repo to install packetfence pkg
    priority: 1

# we only install repos at this step
gitlab_buildpkg_tools__deb_pkgs: []

# we install packetfence-release package here to:
# - install packetfence repos (for install dependencies)
# - test packetfence-release RPM built in pipeline (available in packetfence-ppa directory)
gitlab_buildpkg_tools__rpm_pkgs:
  - packetfence-release
