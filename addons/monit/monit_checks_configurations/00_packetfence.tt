# PacketFence system checks


# - Alert every day at 6AM
# - Do not use Monit alerting since calling external 'mail' command
check program patch with path /usr/local/pf/addons/pf-maint.pl -t
    group PacketFence
    every "0 6 * * *"
    [% FOREACH email IN EMAILS %]
        noalert [% email %]
        if status != 0 then exec "[% MAIL_BIN %] -s '[% SUBJECT_IDENTIFIER %] - PacketFence maintenance patch available' [% email %]"
    [% END %]


# PacketFence services checks

check process packetfence-config with pidfile /usr/local/pf/var/run/pfconfig.pid
    group PacketFence
    start program = "[% SERVICE_BIN %] packetfence-config start" with timeout 60 seconds
    stop program  = "[% SERVICE_BIN %] packetfence-config stop"
    if 3 restarts within 10 cycles then alert

check process packetfence-redis-cache with pidfile /usr/local/pf/var/run/redis_cache.pid
    group PacketFence
    start program = "[% SERVICE_BIN %] packetfence-redis-cache start" with timeout 60 seconds
    stop program  = "[% SERVICE_BIN %] packetfence-redis-cache stop"
    if failed host 127.0.0.1 port 6379 protocol redis for 5 cycles then alert
    if 3 restarts within 10 cycles then alert

check process packetfence-dhcpd with pidfile /usr/local/pf/var/run/dhcpd.pid
    group PacketFence
    start program = "/usr/local/pf/bin/pfcmd service dhcpd start" with timeout 60 seconds
    stop program  = "/usr/local/pf/bin/pfcmd service dhcpd stop"
    if 3 restarts within 10 cycles then alert
    if cpu usage > 90% for 10 cycles then restart

check process packetfence-httpd.aaa with pidfile /usr/local/pf/var/run/httpd.aaa.pid
    group PacketFence
    start program = "/usr/local/pf/bin/pfcmd service httpd.aaa start" with timeout 60 seconds
    stop program  = "/usr/local/pf/bin/pfcmd service httpd.aaa stop"
    if 3 restarts within 10 cycles then alert

check process packetfence-httpd.admin with pidfile /usr/local/pf/var/run/httpd.admin.pid
    group PacketFence
    start program = "/usr/local/pf/bin/pfcmd service httpd.admin start" with timeout 60 seconds
    stop program  = "/usr/local/pf/bin/pfcmd service httpd.admin stop"
    if 3 restarts within 10 cycles then alert

check process packetfence-httpd.graphite with pidfile /usr/local/pf/var/run/httpd.graphite.pid
    group PacketFence
    start program = "/usr/local/pf/bin/pfcmd service httpd.graphite start" with timeout 60 seconds
    stop program  = "/usr/local/pf/bin/pfcmd service httpd.graphite stop"
    if 3 restarts within 10 cycles then alert

check process packetfence-httpd.parking with pidfile /usr/local/pf/var/run/httpd.parking.pid
    group PacketFence
    start program = "/usr/local/pf/bin/pfcmd service httpd.parking start" with timeout 60 seconds
    stop program  = "/usr/local/pf/bin/pfcmd service httpd.parking stop"
    if 3 restarts within 10 cycles then alert

check process packetfence-httpd.portal with pidfile /usr/local/pf/var/run/httpd.portal.pid
    group PacketFence
    start program = "/usr/local/pf/bin/pfcmd service httpd.portal start" with timeout 60 seconds
    stop program  = "/usr/local/pf/bin/pfcmd service httpd.portal stop"
    if 3 restarts within 10 cycles then alert

check process packetfence-httpd.webservices with pidfile /usr/local/pf/var/run/httpd.webservices.pid
    group PacketFence
    start program = "/usr/local/pf/bin/pfcmd service httpd.webservices start" with timeout 60 seconds
    stop program  = "/usr/local/pf/bin/pfcmd service httpd.webservices stop"
    if 3 restarts within 10 cycles then alert

check process packetfence-pfdns with pidfile /usr/local/pf/var/run/pfdns.pid
    group PacketFence
    start program = "/usr/local/pf/bin/pfcmd service pfdns start" with timeout 60 seconds
    stop program  = "/usr/local/pf/bin/pfcmd service pfdns stop"
    if 3 restarts within 10 cycles then alert

check process packetfence-pfmon with pidfile /usr/local/pf/var/run/pfmon.pid
    group PacketFence
    start program = "/usr/local/pf/bin/pfcmd service pfmon start" with timeout 60 seconds
    stop program  = "/usr/local/pf/bin/pfcmd service pfmon stop"
    if 3 restarts within 10 cycles then alert

check process packetfence-pfdhcplistener with pidfile /usr/local/pf/var/run/pfdhcplistener.pid
    group PacketFence
    start program = "/usr/local/pf/bin/pfcmd service pfdhcplistener start" with timeout 60 seconds
    stop program  = "/usr/local/pf/bin/pfcmd service pfdhcplistener stop"
    if 3 restarts within 10 cycles then alert

check process packetfence-pfqueue with pidfile /usr/local/pf/var/run/pfqueue.pid
    group PacketFence
    start program = "/usr/local/pf/bin/pfcmd service pfqueue start" with timeout 60 seconds
    stop program  = "/usr/local/pf/bin/pfcmd service pfqueue stop"
    if 3 restarts within 10 cycles then alert

check process packetfence-radiusd-acct with pidfile /usr/local/pf/var/run/radiusd-acct.pid
    group PacketFence
    start program = "/usr/sbin/[% FREERADIUS_BIN %] -d /usr/local/pf/raddb -n acct" with timeout 60 seconds
    stop program  = "/usr/bin/pkill -F /usr/local/pf/var/run/radiusd-acct.pid"
    if 3 restarts within 10 cycles then alert

check process packetfence-radiusd with pidfile /usr/local/pf/var/run/radiusd.pid
    group PacketFence
    start program = "/usr/sbin/[% FREERADIUS_BIN %] -d /usr/local/pf/raddb -n auth" with timeout 60 seconds
    stop program  = "/usr/bin/pkill -F /usr/local/pf/var/run/radiusd.pid"
    if failed host 127.0.0.1 port 18120 type udp protocol radius secret testing123 for 5 cycles then alert
    if 3 restarts within 10 cycles then alert

check process packetfence-redis_queue with pidfile /usr/local/pf/var/run/redis_queue.pid
    group PacketFence
    start program = "/usr/local/pf/bin/pfcmd service redis_queue start" with timeout 60 seconds
    stop program = "/usr/local/pf/bin/pfcmd service redis_queue stop"
    if failed host 127.0.0.1 port 6380 protocol redis for 5 cycles then alert
    if 3 restarts within 10 cycles then alert

[% DOMAINS.size > 0 %]
check process packetfence-winbind with pidfile /usr/local/pf/var/run/winbindd-wrapper.pid
    group PacketFence
    start program = "/usr/local/pf/bin/pfcmd service windbindd start" with timeout 60 seconds
    stop program = "/usr/local/pf/bin/pfcmd service windbindd stop"
    if 3 restarts within 10 cycles then alert

[% FOREACH domain IN DOMAINS.keys %]
check process packetfence-winbind-[% domain %] with pidfile [% DOMAINS.$domain %]
    group PacketFence
    if changed ppid then alert
    depends on packetfence-winbind
[% END %]

[% END %]
