[general]
#
# general.domain
#
# Domain name of PacketFence system.
domain=packet.org
#
# general.hostname
#
# Hostname of PacketFence system.  This is concatenated with the domain in Apache rewriting rules and therefore must be resolvable by clients.
hostname=fence

[interface eth0]
ip=192.168.57.101
type=management,high-availability,portal
mask=255.255.255.0

[interface eth1]
enforcement=inlinel2
ip=172.16.159.146
type=internal
mask=255.255.255.0

[maintenance]
#
# maintenance.iplog_rotation
#
# Enable or disable iplog rotation (moving iplog_history records to iplog_archive)
# If disabled, 'iplog_cleanup' will delete from the iplog_history table rather than the iplog_archive using the iplog rotation window, interval, batch and timeout parameters.
iplog_rotation=disabled
#
# maintenance.iplog_rotation_window
#
# How long to keep iplog history entry before rotating it to iplog archive (or deleting it if rotation is disabled).
iplog_rotation_window=1W
#
# maintenance.iplog_rotation_interval
#
# At which interval to run the iplog history rotation job (or deletion job if rotation is disabled).
iplog_rotation_interval=60s
#
# maintenance.iplog_rotation_batch
#
# How many iplog history entries to rotate (or to delete if rotation is disabled) in one job.
iplog_rotation_batch=100
#
# maintenance.iplog_rotation_timeout
#
# How long a iplog history rotation job (or deletion job if rotation is disabled) can take before being killed.
iplog_rotation_timeout=10s
#
# maintenance.iplog_cleanup_window
#
# How long to keep a iplog_archive entry before deleting it
iplog_cleanup_window=1M
#
# maintenance.iplog_cleanup_interval
#
# At which interval to run the iplog_archive cleanup job
iplog_cleanup_interval=60s
#
# maintenance.iplog_cleanup_batch
#
# How many iplog_archive entries to clean up in one job
iplog_cleanup_batch=100
#
# maintenance.iplog_cleanup_timeout
#
# How long a iplog_archive cleanup job can take before being killed
iplog_cleanup_timeout=10s
#
# maintenance.locationlog_cleanup_window
#
# How long to keep a locationlog entry before deleting it
locationlog_cleanup_window=1W
#
# maintenance.locationlog_cleanup_interval
#
# At which interval to run the locationlog cleanup job
locationlog_cleanup_interval=60s
#
# maintenance.locationlog_cleanup_batch
#
# How many locationlog entries to clean up in one job
locationlog_cleanup_batch=100
#
# maintenance.locationlog_cleanup_timeout
#
# How long a locationlog cleanup job can take before being killed
locationlog_cleanup_timeout=10s
#
# maintenance.auth_log_cleanup_window
#
# How long to keep an auth_log entry before deleting it
auth_log_cleanup_window=1W
#
# maintenance.auth_log_cleanup_interval
#
# At which interval to run the auth_log cleanup job
auth_log_cleanup_interval=60s
#
# maintenance.auth_log_cleanup_batch
#
# How many auth_log entries to clean up in one job
auth_log_cleanup_batch=100
#
# maintenance.auth_log_cleanup_timeout
#
# How long an auth_log cleanup job can take before being killed
auth_log_cleanup_timeout=10s
#
# maintenance.traplog_cleanup_window
#
# How long to keep a traplog entry before deleting it
traplog_cleanup_window=1W
#
# maintenance.traplog_cleanup_interval
#
# At which interval to run the traplog cleanup job
traplog_cleanup_interval=60s
#
# maintenance.radius_audit_log_cleanup_window
#
# How long to keep a radius_audit_log entry before deleting it
radius_audit_log_cleanup_window=1D
#
# maintenance.radius_audit_log_cleanup_interval
#
# At which interval to run the radius_audit_log cleanup job
radius_audit_log_cleanup_interval=60s
#
# maintenance.radius_audit_log_cleanup_batch
#
# How many radius_audit_log entries to clean up in one job
radius_audit_log_cleanup_batch=100
#
# maintenance.radius_audit_log_cleanup_timeout
#
# How long a radius_audit_log cleanup job can take before being killed
radius_audit_log_cleanup_timeout=10s
#
# maintenance.node_cleanup_window
#
# How long to keep a node entry before deleting it
node_cleanup_window=0D
#
# maintenance.node_cleanup_interval
#
# node cleanup interval
node_cleanup_interval=60s
#
# maintenance.person_cleanup
#
# Users that do not own any device will be deleted.
# Locally created users will only be deleted when their account expires.
person_cleanup=disabled
#
# maintenance.person_cleanup_interval
#
# person cleanup interval
person_cleanup_interval=60s
#
# maintenance.nodes_maintenance_interval
#
# nodes maintenance interval
nodes_maintenance_interval=60s
#
# maintenance.violation_maintenance_interval
#
# violation maintenance interval
violation_maintenance_interval=60s
#
# maintenance.violation_maintenance_batch
#
# violation maintenance batch
violation_maintenance_batch=1000
#
# maintenance.violation_maintenance_timeout
#
# violation maintenance timeout
violation_maintenance_timeout=10s
#
# maintenance.inline_accounting_maintenance_interval
#
# inline accounting maintenance interval
inline_accounting_maintenance_interval=60s
#
# maintenance.acct_maintenance_interval
#
# acct maintenance interval
acct_maintenance_interval=60s
#
# maintenance.provisioning_compliance_poll_interval
#
# Interval at which PacketFence runs the polling enforcement on the provisioners
provisioning_compliance_poll_interval=300s
#
# maintenance.fingerbank_data_update_interval
#
# Interval at which PacketFence updates the local Fingerbank data from the cloud API
fingerbank_data_update_interval=1D
#
# maintenance.cluster_check_interval
#
# Interval at which PacketFence updates the local Fingerbank data from the cloud API
cluster_check_interval=1m
# maintenance.option82_query_interval
#
# Interval at which PacketFence will query compatible switches for DHCP Option 82 switch MAC address
option82_query_interval=23h

