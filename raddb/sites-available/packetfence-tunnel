server packetfence-tunnel {

authorize {	
        suffix
        ntdomain
        eap {
                ok = return
        }
        files
####Activate local user eap authentication based on a specific SSID ####
## Set Called-Station-SSID with the current SSID
#        set.called_station_ssid
#        if (Called-Station-SSID == 'Secure-Wireless') {
## Check activation table with telephone number and pin code
#            pfsms
#            if (fail || notfound) {
## Check temporary_password table with email and password for a guest registration
#                pfguest
#                if (fail || notfound) {
## Check temporary_password table with email and password for a sponsor registration
#                    pfsponsor
#                    if (fail || notfound) {
#                        update control {
#                           MS-CHAP-Use-NTLM-Auth := Yes
#                        }
#                    }
#                    else {
#                        update control {
#                            MS-CHAP-Use-NTLM-Auth := No
#                        }
#                    }
#                }
#                else {
#                    update control {
#                        MS-CHAP-Use-NTLM-Auth := No
#                    }
#                }
#            }
#            else {
#                update control {
#                    MS-CHAP-Use-NTLM-Auth := No
#                 }
#            }
#        }
        expiration
        logintime
}

authenticate {
        Auth-Type MS-CHAP {
                mschap
        }
        eap
}

session {
        radutmp
}

post-auth {
        exec
        if ( User-Name =~ /^[^\\]+[\\]+([^\\]+)/ ) {
                update request {
                    User-Name := "%{1}";
            }
        }
        update control {
            PacketFence-RPC-Server = ${rpc_host}
            PacketFence-RPC-Port = ${rpc_port}
            PacketFence-RPC-User = ${rpc_user}
            PacketFence-RPC-Pass = ${rpc_pass}
            PacketFence-RPC-Proto = ${rpc_proto}
        }
        packetfence
        Post-Auth-Type REJECT {
                attr_filter.access_reject
        }
}

pre-proxy {
}

post-proxy {
        eap
}
} # packetfence-tunnel server block
